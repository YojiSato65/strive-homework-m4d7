{"ast":null,"code":"var _jsxFileName = \"/Users/yoji/Desktop/Software engineer/Strive school/Course/M4/day7/strive-homework-m4d7/m4-d7/src/components/AddComment.jsx\";\nimport { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: {\n        comment: '',\n        rate: 1,\n        elementId: null\n      }\n    };\n\n    this.sendComment = async e => {\n      e.preventDefault();\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comments', {\n          method: 'POST',\n          body: JSON.stringify(this.state.comment),\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjI4YjA3YTRlYTdiMTAwMTVkMDY3YWIiLCJpYXQiOjE2NDgwNjcwMzksImV4cCI6MTY0OTI3NjYzOX0.sBKkw7wQQ_5fkciKFIJTia-jJYnPmm39eRgUh7lSF24'\n          }\n        });\n\n        if (response.ok) {\n          // the comment has been sent succesfully!!\n          alert('Comment was sent!');\n        } else {\n          console.log('error');\n          alert('something went wrong');\n        }\n      } catch (error) {\n        console.log('error');\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.asin !== this.props.asin) {\n      this.setState({\n        comment: { ...this.state.comment,\n          elementId: this.props.asin\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.sendComment,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comment text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Add comment here\",\n            value: this.state.comment.comment,\n            onChange: e => this.setState({\n              comment: { ...this.state.comment,\n                comment: e.target.value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: this.state.comment.rate,\n            onChange: e => this.setState({\n              comment: { ...this.state.comment,\n                rate: e.target.value\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddComment;","map":{"version":3,"sources":["/Users/yoji/Desktop/Software engineer/Strive school/Course/M4/day7/strive-homework-m4d7/m4-d7/src/components/AddComment.jsx"],"names":["Component","Button","Form","AddComment","state","comment","rate","elementId","sendComment","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","Authorization","ok","alert","console","log","error","componentDidUpdate","prevProps","asin","props","setState","render","target","value"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\nclass AddComment extends Component {\n  state = {\n    comment: {\n      comment: '',\n      rate: 1,\n      elementId: null,\n    },\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.asin !== this.props.asin) {\n      this.setState({\n        comment: {\n          ...this.state.comment,\n          elementId: this.props.asin,\n        },\n      })\n    }\n  }\n\n  sendComment = async (e) => {\n    e.preventDefault()\n    try {\n      let response = await fetch(\n        'https://striveschool-api.herokuapp.com/api/comments',\n        {\n          method: 'POST',\n          body: JSON.stringify(this.state.comment),\n          headers: {\n            'Content-type': 'application/json',\n            Authorization:\n              'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjI4YjA3YTRlYTdiMTAwMTVkMDY3YWIiLCJpYXQiOjE2NDgwNjcwMzksImV4cCI6MTY0OTI3NjYzOX0.sBKkw7wQQ_5fkciKFIJTia-jJYnPmm39eRgUh7lSF24',\n          },\n        },\n      )\n      if (response.ok) {\n        // the comment has been sent succesfully!!\n        alert('Comment was sent!')\n      } else {\n        console.log('error')\n        alert('something went wrong')\n      }\n    } catch (error) {\n      console.log('error')\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.sendComment}>\n          <Form.Group>\n            <Form.Label>Comment text</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Add comment here\"\n              value={this.state.comment.comment}\n              onChange={(e) =>\n                this.setState({\n                  comment: {\n                    ...this.state.comment,\n                    comment: e.target.value,\n                  },\n                })\n              }\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Rating</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={this.state.comment.rate}\n              onChange={(e) =>\n                this.setState({\n                  comment: {\n                    ...this.state.comment,\n                    rate: e.target.value,\n                  },\n                })\n              }\n            >\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Form.Control>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default AddComment\n"]},"metadata":{},"sourceType":"module"}